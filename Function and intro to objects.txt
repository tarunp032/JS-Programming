/******************************************************************************



*******************************************************************************/
// Create a function greet that takes two positional arguments: name and greeting, and returns a personalized greeting message.
// Question 1
// function greet(name, greeting){
//     return name +"  "+ greeting;
// }

// let greeting = "Hello Pajji";
// let name = "Preetpal";


// let a = greet(name, greeting)

// console.log(a);
// *******************************************************************************/
// // Question 2 Write a function calculatePrice that takes two arguments: price and taxRate. If taxRate is not provided, it should default to 5%.

// function calculatePrice(price, taxRate = 5){
//     return price - (price * taxRate / 100) ;
// }

// let taxRate = 10;
// let price = 1000;
// console.log(calculatePrice(price));

// *******************************************************************************/
//// Question 3 Create a function sumNumbers that takes an unknown number of arguments using the rest operator and returns their sum

// function sumNumbers(...rest){
//     // let [a , b, c ,d] = rest;
//     let sum = 0;
//     for(let i = 0; i < rest.length; i++){
//         sum = sum + rest[i];
//     }
//     // return a + b + c + d;
//     return sum;
// }

// let a = 10;
// let b = 25;
// let c = 25;
// let d = 100;

// console.log(sumNumbers(a, b , c , d));


// *******************************************************************************/

// // Question 4 Create a function introduce that takes three positional arguments: firstName, lastName, and age, and returns a sentence introducing the person.


// function intro(firstName, lastName, age){

// return (`${firstName} ${lastName} age ${age}`)



// }

// let firstName = "Mangal";
// let lastName = "Singh";

// let age = 25;
// console.log(intro(firstName,lastName,age));
// *******************************************************************************/
//// Question 5 Write a function makeSandwich that takes two arguments: breadType and filling. The default value for breadType should be "whole wheat"

// function makeSandwich(filling, breadType = "whole wheat"){
//     return breadType + " filled with " + filling;
// }

// // let breadType = "whole bajra";
// let filling = "Aloo";

// console.log(makeSandwich(filling));

// *******************************************************************************/
//// Question 6 Create a function multiply that takes two positional arguments x and y, with a default value for y as 1, and returns the result of multiplying them.

// function multiplying(x,y = 1){
//     return x * y;
// }

// let x = 25;
// console.log(multiplying(x))
// *******************************************************************************/

//// Question 7 Write a function getTotalPrice that takes an unknown number of prices as arguments using the rest operator and returns the total price

// function getTotalPrice(...rat) {
// 	let [a, b,c] = rat;
// 	return a + b + c;
// }

// let a = 10;
// let b = 25;
// let c = 25;

// console.log(getTotalPrice(a,b,c));

// *******************************************************************************/

//// Question 8 Create a function buildSentence that accepts three arguments: subject, verb, and object. If no object is passed, it should default to "something".

// function buildSentence(subject, verb, object = "something"){

// return subject + " " + verb + " " + object;

// }

// let subject = "English";
// let verb = "2nd form";

// console.log(buildSentence(subject, verb));




// *******************************************************************************/

// // Question 9 Write a function addNumbers that takes an unknown number of numbers using the rest operator and returns the sum.
// function addNumbers(...rest){
//     // let [a , b, c ,d] = rest;
//     let sum = 0;
//     for(let i = 0; i < rest.length; i++){
//         sum = sum + rest[i];
//     }
//     // return a + b + c + d;
//     return sum;
// }

// let a = 10;
// let b = 25;
// let c = 25;
// let d = 100;

// console.log(addNumbers(a, b , c , d));

// *******************************************************************************/


//// Question 10 Create a function displayInfo that takes three arguments: name, age, and city. If no city is provided, it should default to "Unknown".

// function displayInfo(name, age , city = "Jaipur"){
//     return "My name is " + name + " " + " my age is " + " " + "and i am from " + city;
// }

// console.log(displayInfo("devesh", 69))



// *******************************************************************************/

// // Question 11 Write a function orderPizza that takes two arguments: size and topping. If no topping is provided, it should default to "cheese".



// function orderPizza(size , topping = "Cheese"){
//     return size + " inch " + "with " + topping;
// }

// console.log(orderPizza(12))
// *******************************************************************************/
// // Question 12 Create a function makeCoffee that takes one required argument type and an unknown number of optional ingredients using the rest operator.
// function makeCoffee(type, ...ingredients) {
//     console.log(`Making a ${type} coffee.`);

//     if (ingredients.length > 0) {
//         return (`Adding ingredients: ${ingredients.join(', ')}`);
//     } else {
//         return ('No additional ingredients.');
//     }
// }


// makeCoffee('Espresso');
// makeCoffee('Latte', 'milk', 'sugar');



// *******************************************************************************/
// // Question 13 Write a function introducePerson that takes two positional arguments name and profession, with profession defaulting to "Student".

// function introducePerson(name , profession = "Student"){
//     return "My name is " + name + " and I am " + profession + "by profession";
// }

// console.log(introducePerson("Devesh"));


// *******************************************************************************/

// // Question 14 Create a function findMax that accepts an unknown number of numbers using the rest operator and returns the maximum value.

// function findMax(...args){
//     let max = args[1];
//     for(let i = 1; i < args.length ; i++){
//         if(max < args[i]){
//             max = args[i];
//         }
//     }
//     return max;
// }

// let a = 10;
// let b = 15;
// let c = 258;
// let d = 785;

// console.log(findMax(a,b,c,d));
// *******************************************************************************/
// // Question 15 Write a function buildPerson that takes two arguments: firstName and lastName, and returns an object representing the person.
// function buildPerson(firstName, lastName){

//     return person = {
//     firstName : "Daku",
//     lastName : "Mangal Singh",
// };


// }


// console.log(buildPerson())


// *******************************************************************************/

// // Question 16 Create an object car with primitive properties: brand, model, and year;
let car = {
brand : "Toyota"
	,
model : "alto 800"
	,
	year : 2001,
}
// *******************************************************************************/


// // Question 17 Create an object book with non-primitive properties: title, author, and reviews (where reviews is an array of review objects).

// let book = {
// title : "Jungle m mangle",
	
// author : "Ram rahim",
// reviews :
// 	[{
// 		review : 1,
// 	},
// 	{
// 		review : 4,
// 	}]
// }

// console.log(book.reviews[0]);




// // Question 18 Create an object laptop with both primitive (brand, price) and non-primitive (features - an array) properties.

// let laptop = {
//     brand : "Dell",
//     price : 62000,
    
//     features : [
//         {
//             ram : "16 Gb",
//             rom : "256 Gb"
//         },
//         {
//             ram : "32 Gb",
//             rom : " 512 Gb ",
//         }
//         ]
// }

// console.log(laptop.brand, laptop.price, laptop.features)



// // Question 19 Create an object person with a method greet that prints a greeting message using the name property.

// let person = {
//     name : "Jeetalal",
//     funk : function (name){
//         return "Hello " + name;
//     }
// } 
//  console.log(person.funk(person.name))


// *******************************************************************************/
// // // Question 20 Write a function buildTeam that takes an unknown number of team members using the rest operator and returns an array of their names.

// function buildTeam(...names){
//     return names;
// }

// let a = "Ravi";
// let b = "kishan";
// let c = "vikram";
// let d = "Virat";

// console.log(buildTeam(a,b,c,d))


// // // Question 21 Create a function discountPrice that takes two positional arguments: price and discountPercentage. If no discount is provided, it should default to 10%.

// function discountPercentage(price, taxRate = 5){
//     return price - (price * taxRate / 100) ;
// }

// let taxRate = 10;
// let price = 1000;
// console.log(calculatePrice(price));


// // // Question 22 Write a function describePet that accepts two arguments: petName and petType. If no petType is provided, it should default to "dog".
// // // Question 23 Create a function calculateArea that accepts two arguments: length and width. If width is not provided, it should default to the same value as length (for a square).
// // // Question 24 Write a function joinStrings that accepts an unknown number of strings using the rest operator and returns them concatenated into one string.
// // // Question 25 Create a function createUserProfile that accepts three arguments: name, email, and role. If no role is provided, it should default to "user".
// // // Question 26 Write a function divideNumbers that takes two arguments: a and b, with b defaulting to 1 if not provided.
// // // Question 27 Create a function combineArrays that accepts an unknown number of arrays using the rest operator and returns one combined array.
// // // Question 28 Write a function introduceEmployee that takes two positional arguments: employeeName and position, with position defaulting to "intern".
// // // Question 29 Create a function findAverage that takes an unknown number of scores using the rest operator and returns the average score.
// // // Question 30 Write a function buildCar that accepts three arguments: brand, model, and year. If no year is provided, it should default to the current year.
// *******************************************************************************/
// *******************************************************************************/
// *******************************************************************************/
// *******************************************************************************/